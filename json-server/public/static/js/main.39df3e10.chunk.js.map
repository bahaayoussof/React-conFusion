{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/HeaderComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/DishdetailComponent.js","components/FooterComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","active","About","leaders","RenderLeaders","list","RenderLeader","tag","left","middle","object","body","heading","title","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","type","color","Component","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","isOpen","navbar","outline","toggle","innerRef","input","check","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","postComment","dishId","rating","author","comment","dispatch","newComment","date","Date","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","message","dishesFailed","errmess","addDishes","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","CommentForm","isFormOpen","RenderDish","transFormProps","top","RenderComments","Intl","DateTimeFormat","year","month","day","format","parse","DishDetail","Footer","class","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","feedback","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39df3e10.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = <RenderLeaders leaders={props.leaders.leaders} isLoading={props.leaders.isLoading} errMess={props.leaders.errMess} />;\r\n\r\n    function RenderLeaders({ leaders, isLoading, errMess }) {\r\n        if (isLoading) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        }\r\n        else if (errMess) {\r\n            return (\r\n                <h4>{errMess}</h4>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <Media list>\r\n                    <Stagger in>\r\n                        {leaders.map((leader) =>\r\n                            <Fade in>\r\n                                <ul key={leader.id}>\r\n                                    <RenderLeader leader={leader} />\r\n                                </ul>\r\n                            </Fade>\r\n                        )}\r\n                    </Stagger>\r\n                </Media>\r\n            );\r\n        }\r\n    }\r\n\r\n    function RenderLeader({ leader }) {\r\n        return (\r\n            <div className=\"col-12 m-1\">\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>\r\n                        Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong.\r\n                        With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.\r\n                        Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.\r\n                    </p>\r\n                    <p>\r\n                        The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO,\r\n                        Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Col, Label, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be between 3 to 15 characters ',\r\n                                            maxLength: 'Must be between 3 to 15 characters'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be between 3 to 15 characters ',\r\n                                            maxLength: 'Must be between 3 to 15 characters'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(11), isNumber\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be 11 number ',\r\n                                            maxLength: 'Must be 11 number ',\r\n                                            isNumber: 'Enter a valid number!'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"5\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {\r\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler className=\"mr-3\" onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='../assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button className=\"btn-sm\" outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante con Fusion</h1>\r\n                            <p>\r\n                                We take inspiration from the World's best cuisines, and create a unique fusion experience.\r\n                                Our lipsmacking creations will tickle your culinary senses!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\r\n                                    <strong>Remember me</strong>\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n// Post Comment\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(`Error ${response.status} : ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => { throw error; })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post comments', error.message);\r\n            alert(`Your comment could not be posted/nError: ${error.message}`);\r\n        });\r\n}\r\n\r\n// Post Feedback\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (feedback) => () => {\r\n\r\n    const newFeedback = { date: new Date().toISOString(), ...feedback };\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => alert('Thank you for your feedback! ' + JSON.stringify(response)))\r\n        .catch(error => {\r\n            console.log('Post feedback', error.message)\r\n            alert('Your feedback could not be posted\\nError: ' + error.message)\r\n        })\r\n}\r\n\r\n// Fetch Dishes\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(`Error ${response.status} : ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n// Fetch Comments\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(`Error ${response.status} : ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n// Fetch Promotions\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(`Error ${response.status} : ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\n// Fetch Leaders\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(`Error ${response.status} : ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Label, Button, Col, Row, Modal, ModalHeader, ModalBody\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { postComment } from '../redux/ActionCreators';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isFormOpen: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isFormOpen: !this.state.isFormOpen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil\" /> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isFormOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={{ size: 12 }}>\r\n                                    <Control.select model=\".rate\" name=\"rate\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={{ size: 12 }}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be 3 or more characters ',\r\n                                            maxLength: 'Must be between 3 to 15 characters'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={{ size: 12 }}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"5\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transFormProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n\r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                    <li key={comment.id}>\r\n                                        <p>{comment.comment}</p>\r\n                                        <p>-- <span>{comment.author}</span> , {new Intl.DateTimeFormat('en-US', {\r\n                                            year: 'numeric',\r\n                                            month: 'long',\r\n                                            day: '2-digit'\r\n                                        }).format(new Date(Date.parse((comment.date))))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            )\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i> : +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i> : +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i> :\r\n                            <a href=\"mailto:confusion@food.net\"> confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div class=\"text-center\">\r\n                            <a class=\"btn btn-socail-icon btn-google\" href=\"http://google.com/+\">\r\n                                <i class=\"fa fa-google-plus\"></i></a>\r\n                            <a class=\"btn btn-socail-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\">\r\n                                <i class=\"fa fa-facebook\"></i></a>\r\n                            <a class=\"btn btn-socail-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\">\r\n                                <i class=\"fa fa-linkedin\"></i></a>\r\n                            <a class=\"btn btn-socail-icon btn-twitter\" href=\"http://twitter.com/\">\r\n                                <i class=\"fa fa-twitter\"></i></a>\r\n                            <a class=\"btn btn-socail-icon btn-google\" href=\"http://youtube.com/\">\r\n                                <i class=\"fa fa-youtube\"></i></a>\r\n                            <a class=\"btn btn-socail-icon btn-reddit\" href=\"mailto:\"><i class=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => { dispatch(fetchComments()) },\r\n    fetchPromos: () => { dispatch(fetchPromos()) },\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback}\r\n                                resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                            <Redirect to='/home' />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true, errMess: null, dishes: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n        case ActionTypes.ADD_COMMENT:\r\n            let comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null, promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] };\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true, errMess: null, leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <div className=\"App\">\r\n                        <Main />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}